{"mappings":"AAAA,0DAA0D;AAC1D,MAAM,eAAe,UAAU,GAAG,CAAC,CAAC,KAAM,GAAG,IAAI;AACjD,QAAQ,GAAG,CAAC;AAEZ,+DAA+D;AAC/D,MAAM,UAAU,UAAU,MAAM,CAAC,CAAC,KAAO,GAAG,IAAI,KAAG,GAAG,aAAa;AACnE,QAAQ,GAAG,CAAC;AAEZ,kEAAkE;AAClE,MAAM,eAAe,UAAU,MAAM,CAAC,CAAC,KAAO,GAAG,OAAO,CAAC,SAAS,KAAG,IAAI;AACzE,QAAQ,GAAG,CAAC,eAEZ,0DAA0D;CAC1D,+CAA+C;CAC/C,yBAAyB","sources":["op1.js"],"sourcesContent":["// 1a Use array.map to create new array with type property\r\nconst allTypeNames = inventory.map((tv)=> tv.type);\r\nconsole.log(allTypeNames)\r\n\r\n// 1b collect all tv's and filter where sold === Original Stock\r\nconst soldOut = inventory.filter((tv) => tv.sold===tv.originalStock);\r\nconsole.log(soldOut);\r\n\r\n// 1c collect all tv's and filter where options.ambiLight === true\r\nconst hasAmbiLight = inventory.filter((tv) => tv.options.ambiLight===true);\r\nconsole.log(hasAmbiLight);\r\n\r\n// 1d Use sort to sort original array on price low => high\r\n// inventory.sort((a, b) => a.price - b.price);\r\n// console.log(inventory)"],"names":[],"version":3,"file":"index.17cc67d5.js.map","sourceRoot":"/__parcel_source_root/"}